From 8e80bb51a261c22561101c1f2c53759ee15eae27 Mon Sep 17 00:00:00 2001
From: "George G. Davis" <george_davis@mentor.com>
Date: Wed, 21 Aug 2013 18:40:29 -0400
Subject: [PATCH] sfifo_demo_ws_19_Aug

---
 arch/arm/mach-vexpress/v2m.c | 83 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 83 insertions(+)
 mode change 100644 => 100755 arch/arm/mach-vexpress/v2m.c

diff --git a/arch/arm/mach-vexpress/v2m.c b/arch/arm/mach-vexpress/v2m.c
index 37608f2..aac9b21
--- a/arch/arm/mach-vexpress/v2m.c
+++ b/arch/arm/mach-vexpress/v2m.c
@@ -4,6 +4,7 @@
 #include <linux/device.h>
 #include <linux/amba/bus.h>
 #include <linux/amba/mmci.h>
+#include <linux/amba/clcd.h>
 #include <linux/io.h>
 #include <linux/init.h>
 #include <linux/of_address.h>
@@ -13,6 +14,7 @@
 #include <linux/platform_device.h>
 #include <linux/ata_platform.h>
 #include <linux/smsc911x.h>
+#include <linux/smc91x.h>
 #include <linux/spinlock.h>
 #include <linux/usb/isp1760.h>
 #include <linux/clkdev.h>
@@ -637,6 +639,85 @@ static struct sys_timer v2m_dt_timer = {
 	.init = v2m_dt_timer_init,
 };
 
+
+
+int mgcdemo_clcd_setup(struct clcd_fb *fb)
+{
+	dma_addr_t dma;
+        static unsigned long framesize = SZ_1M;
+
+	fb->fb.screen_base = dma_alloc_writecombine(&fb->dev->dev, framesize,
+						    &dma, GFP_KERNEL);
+	if (!fb->fb.screen_base) {
+		printk(KERN_ERR "CLCD: unable to map framebuffer\n");
+		return -ENOMEM;
+	}
+
+	fb->fb.fix.smem_start	= dma;
+	fb->fb.fix.smem_len	= framesize;
+	return 0;
+}
+
+int mgcdemo_clcd_mmap(struct clcd_fb *fb, struct vm_area_struct *vma)
+{
+	return dma_mmap_writecombine(&fb->dev->dev, vma,
+				     fb->fb.screen_base,
+				     fb->fb.fix.smem_start,
+				     fb->fb.fix.smem_len);
+}
+
+void mgcdemo_clcd_remove(struct clcd_fb *fb)
+{
+	dma_free_writecombine(&fb->dev->dev, fb->fb.fix.smem_len,
+			      fb->fb.screen_base, fb->fb.fix.smem_start);
+}
+
+static struct clcd_panel vga = {
+	.mode		= {
+		.name		= "VGA",
+		.refresh	= 60,
+		.xres		= 640,
+		.yres		= 480,
+		.pixclock	= 39721,
+		.left_margin	= 40,
+		.right_margin	= 24,
+		.upper_margin	= 32,
+		.lower_margin	= 11,
+		.hsync_len	= 96,
+		.vsync_len	= 2,
+		.sync		= 0,
+		.vmode		= FB_VMODE_NONINTERLACED,
+	},
+	.width		= -1,
+	.height		= -1,
+	.tim2		= TIM2_BCD | TIM2_IPC,
+	.cntl		= CNTL_LCDTFT | CNTL_LCDVCOMP(1),
+	.bpp		= 16,
+};
+
+int mgc_a9mp_clcd_setup(struct clcd_fb *fb)
+{
+        fb->panel = &vga;
+        return mgcdemo_clcd_setup(fb);
+}
+
+
+static struct clcd_board clcd_plat_data = {
+	.name		= "MGCDEMO",
+	.check		= clcdfb_check,
+	.decode		= clcdfb_decode,
+	.setup		= mgc_a9mp_clcd_setup,
+	.mmap		= mgcdemo_clcd_mmap,
+	.remove		= mgcdemo_clcd_remove,
+};
+/*
+static struct smc91x_platdata smc91x_info = {
+	.flags = SMC91X_USE_16BIT | SMC91X_NOWAIT,
+	.leda = RPC_LED_100_10,
+	.ledb = RPC_LED_TX_RX,
+};
+*/
+
 static struct of_dev_auxdata v2m_dt_auxdata_lookup[] __initdata = {
 	OF_DEV_AUXDATA("arm,vexpress-flash", V2M_NOR0, "physmap-flash",
 			&v2m_flash_data),
@@ -645,6 +726,8 @@ static struct of_dev_auxdata v2m_dt_auxdata_lookup[] __initdata = {
 	OF_DEV_AUXDATA("arm,vexpress-flash", 0x08000000, "physmap-flash",
 			&v2m_flash_data),
 	OF_DEV_AUXDATA("arm,primecell", 0x1c050000, "mb:mmci", &v2m_mmci_data),
+	OF_DEV_AUXDATA("arm,primecell", 0x10020000, "mb:clcd", &clcd_plat_data),
+        //	OF_DEV_AUXDATA("smsc,lan91c111", 0x4e000000, "mb:ethernet", &smc91x_info),
 	{}
 };
 
-- 
1.7.11.7

